#------------------------------------------------------------------------------
# DATAPUNK POSTGRESQL CONFIGURATION
# Compatible with PostgreSQL 16.x
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# EXTENSIONS AND PRELOADED LIBRARIES (ADDITIONAL)
#------------------------------------------------------------------------------

# Update shared_preload_libraries to include additional extensions
[This line specifies all PostgreSQL extensions that should be loaded at server startup]
shared_preload_libraries = 'pg_stat_statements,pg_stat_monitor,pg_cron,pg_prewarm,pg_stat_kcache,pg_trgm,pgvector,timescaledb,pg_memcache,pg_tle,pgsodium,auto_explain,pg_partman,pg_qualstats,pg_prometheus,pg_bulkload'

# pg_memcache configuration
[Memcached integration settings for query result caching]
memcache.default_lifetime = '1 hour'        [How long cached items remain valid by default]
memcache.number_of_pools = 4                [Number of connection pools to Memcached servers]

# pg_tle configuration
[Trusted Language Extensions for running custom code]
tle.max_workers = 4                         [Maximum number of background workers for TLE operations]
tle.python_path = '/usr/local/lib/python3.9'[Path to Python installation for Python-based extensions]

# pg_prewarm configuration
[Settings for preloading relation data into memory cache]
pg_prewarm.autoprewarm = true              [Automatically reload previously cached data after restart]
pg_prewarm.autoprewarm_interval = '300s'    [How often to update the prewarm catalog]

# pg_bulkload configuration
[High-speed data loading utility settings]
bulkload.max_workers = 4                    [Maximum number of parallel workers for bulk loading]
bulkload.memory_limit = '2GB'               [Memory limit for bulk load operations]

# auto_explain configuration
[Automatic execution plan logging for slow queries]
auto_explain.log_min_duration = '100ms'     [Only log queries running longer than this duration]
auto_explain.log_analyze = on               [Include EXPLAIN ANALYZE output in logs]
auto_explain.log_buffers = on               [Include buffer usage in logs]
auto_explain.log_timing = on                [Include timing information in logs]
auto_explain.log_nested_statements = on     [Include nested statements in logs]

# pg_partman configuration
[Partition management automation settings]
partman.retention = '3 months'              [How long to retain partitioned data]
partman.retention_keep_table = true         [Keep table structure when removing old partitions]
partman.retention_keep_index = true         [Keep indexes when removing old partitions]

# pg_qualstats configuration
[Query predicate statistics collection settings]
pg_qualstats.enabled = true                 [Enable collection of predicate statistics]
pg_qualstats.track_constants = on           [Track constant values in predicates]
pg_qualstats.max = 10000                    [Maximum number of predicates to track]

# pgsodium configuration
[Encryption and security features settings]
pgsodium.getkey_script = '/etc/pgsodium/getkey.sh'  [Script path for encryption key management]

# pg_prometheus configuration
[Prometheus metrics export settings]
prometheus.listen_address = '0.0.0.0:9187'  [Address where Prometheus metrics are exposed]
prometheus.retention_days = 7                [How long to retain Prometheus metrics]

[General Notes:
- These settings are optimized for a system with at least 16GB RAM
- Some extensions require additional setup in the database after loading
- Monitor system performance after enabling these extensions
- Adjust values based on actual usage patterns and system resources
- Regular monitoring of logs is recommended to ensure optimal performance]

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------
[Settings that control how clients can connect to the database]
listen_addresses = '*'                      [Accept connections from all IP addresses]
max_connections = 200                       [Maximum concurrent connections, sized for medium load]
superuser_reserved_connections = 3          [Connections reserved for database maintenance]

#------------------------------------------------------------------------------
# MEMORY CONFIGURATION
#------------------------------------------------------------------------------
[Memory allocation settings optimized for 16GB+ RAM systems]
shared_buffers = '4GB'                      [25% of RAM for dedicated DB server]
huge_pages = 'try'                          [Attempt to use huge pages for better performance]
effective_cache_size = '12GB'               [75% of RAM, helps query planner]
maintenance_work_mem = '1GB'                [Larger value for vacuum, indexes, etc.]
work_mem = '64MB'                          [Memory for sort operations per connection]
dynamic_shared_memory_type = posix         [Standard shared memory implementation]
temp_buffers = '64MB'                      [Per-session temp table memory]

#------------------------------------------------------------------------------
# WRITE AHEAD LOG
#------------------------------------------------------------------------------
[Settings for transaction logging and recovery]
wal_level = logical                        [Enables logical replication and CDC]
synchronous_commit = off                   [Improves performance at slight durability cost]
wal_writer_delay = '200ms'                 [How often WAL writer flushes WAL]
wal_buffers = '16MB'                      [Memory for WAL data]
checkpoint_completion_target = 0.9         [Spreads checkpoint I/O over longer period]
min_wal_size = '1GB'                      [Minimum WAL file storage]
max_wal_size = '4GB'                      [Maximum WAL file storage before checkpoint]

#------------------------------------------------------------------------------
# QUERY PLANNING
#------------------------------------------------------------------------------
[Settings that influence the query planner's behavior]
random_page_cost = 1.1                    [Lower value optimized for SSD storage]
effective_io_concurrency = 200            [Higher value for SSD/NVMe storage]
default_statistics_target = 100           [Balance between planning time and quality]
constraint_exclusion = partition          [Optimize queries against partitioned tables]

#------------------------------------------------------------------------------
# PARALLEL QUERY
#------------------------------------------------------------------------------
[Settings for parallel query execution]
max_worker_processes = 8                  [Total background workers available]
max_parallel_workers_per_gather = 4       [Workers per parallel operation]
max_parallel_workers = 8                  [Maximum parallel workers total]
parallel_leader_participation = on        [Leader process also executes plan]

#------------------------------------------------------------------------------
# AUTOVACUUM
#------------------------------------------------------------------------------
[Settings for automatic table maintenance]
autovacuum = on                          [Enable automatic vacuum]
autovacuum_max_workers = 4               [Number of vacuum processes]
autovacuum_naptime = '1min'              [Time between vacuum runs]
autovacuum_vacuum_threshold = 50         [Minimum rows changed before vacuum]
autovacuum_analyze_threshold = 50        [Minimum rows changed before analyze]
autovacuum_vacuum_scale_factor = 0.05    [Fraction of table size to trigger vacuum]
autovacuum_analyze_scale_factor = 0.02   [Fraction of table size to trigger analyze]
autovacuum_vacuum_cost_delay = 2ms       [Vacuum I/O cost delay]

#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------
[Default settings for client sessions]
timezone = 'UTC'                         [Use UTC for consistent timestamps]
statement_timeout = '1h'                 [Cancel queries running over 1 hour]
lock_timeout = '1s'                      [Cancel lock attempts over 1 second]
idle_in_transaction_session_timeout = '30min' [Kill idle transactions after 30 minutes]
deadlock_timeout = '1s'                  [Time to wait before checking for deadlock]

#------------------------------------------------------------------------------
# LOGGING
#------------------------------------------------------------------------------
[Configuration for log collection and management]
log_destination = 'csvlog'               [Log format for easier parsing]
logging_collector = on                   [Enable log collection]
log_directory = 'pg_log'                 [Where to store log files]
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' [Log filename format]
log_rotation_age = 1d                    [Rotate logs daily]
log_rotation_size = 100MB                [Also rotate when size exceeds 100MB]
log_min_duration_statement = 1000        [Log queries running â‰¥ 1 second]
log_checkpoints = on                     [Log checkpoint information]
log_connections = on                     [Log all connections]
log_disconnections = on                  [Log all disconnections]
log_lock_waits = on                     [Log when lock wait occurs]
log_temp_files = 0                      [Log all temp file usage]
log_autovacuum_min_duration = 0         [Log all autovacuum operations]
log_error_verbosity = default           [Standard error detail level]
log_line_prefix = '%m [%p] %q%u@%d '    [Timestamp, PID, user, and database in logs]

#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------
[Settings that control query execution methods]
enable_bitmapscan = on                  [Allow bitmap scan methods]
enable_hashagg = on                     [Allow hash aggregation]
enable_hashjoin = on                    [Allow hash joins]
enable_indexscan = on                   [Allow index scans]
enable_material = on                    [Allow materialization]
enable_mergejoin = on                   [Allow merge joins]
enable_nestloop = on                    [Allow nested loop joins]
enable_seqscan = on                     [Allow sequential scans]
enable_sort = on                        [Allow explicit sorts]
enable_tidscan = on                     [Allow TID scans]
enable_partitionwise_join = on          [Allow partition-wise joins]
enable_partitionwise_aggregate = on      [Allow partition-wise aggregation]
jit = on                                [Enable JIT compilation]

