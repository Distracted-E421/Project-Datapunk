x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:
  redis:
    image: redis:7-alpine
    container_name: datapunk_redis_stream
    ports:
      - "6379:6379"
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "redis-cli", "ping"]
    networks:
      - datapunk_stream_network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: datapunk_rabbitmq_stream
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-datapunk}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-changeme}
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "rabbitmqctl", "status"]
    networks:
      - datapunk_stream_network

  datapunk-stream:
    build:
      context: .
      dockerfile: Dockerfile
    image: datapunk/stream:latest
    container_name: datapunk_stream
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      POSTGRES_URL: ${POSTGRES_URL:-postgresql://datapunk:changeme@datapunk-lake:5432/datapunk}
      API_KEYS: ${API_KEYS:-test_key_123}
    volumes:
      - stream_cache:/cache
      - stream_logs:/var/log/datapunk/stream
    ports:
      - "8000:8000"
    networks:
      - datapunk_stream_network
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '4G'
        reservations:
          cpus: '1'
          memory: '2G'
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  stream_cache:
  stream_logs:

networks:
  datapunk_stream_network:
    driver: bridge