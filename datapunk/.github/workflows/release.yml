name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build shared library
        run: |
          cd datapunk/lib/shared
          python -m build

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            datapunk/lib/shared/dist/*
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Build and Push Container Images
        env:
          REGISTRY: ghcr.io
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          for component in lake forge nexus cortex stream; do
            docker build -t ghcr.io/${{ github.repository }}/$component:${{ github.ref_name }} \
                        -t ghcr.io/${{ github.repository }}/$component:latest \
                        datapunk/containers/$component
            docker push ghcr.io/${{ github.repository }}/$component:${{ github.ref_name }}
            docker push ghcr.io/${{ github.repository }}/$component:latest
          done

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload datapunk/lib/shared/dist/*

      - name: Generate Documentation
        run: |
          pip install mkdocs mkdocs-material
          mkdocs build

      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Notify Release
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: "New release ${{ github.ref_name }} has been published! ðŸš€"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
