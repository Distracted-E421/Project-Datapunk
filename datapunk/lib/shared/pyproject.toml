[tool.poetry]
name = "datapunk-shared"
version = "0.1.0"
description = "Shared libraries for Datapunk services"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.11"
asyncpg = "^0.28.0"
redis = "^5.0.1"
aiohttp = "^3.9.1"
prometheus-client = "^0.19.0"
pydantic = "^2.5.2"
pydantic-settings = "^2.1.0"
python-consul2 = "^0.1.5"
structlog = "^23.2.0"
tenacity = "^8.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
mypy = "^1.7.1"
isort = "^5.12.0"
pylint = "^3.0.2"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"
pytest-timeout = "^2.2.0"
pytest-env = "^1.1.1"
pytest-mock = "^3.12.0"
pytest-aiohttp = "^1.0.5"
pytest-redis = "^3.0.2"
pytest-postgresql = "^5.0.0"
aioresponses = "^0.7.4"
freezegun = "^1.2.2"
coverage = {extras = ["toml"], version = "^7.3.2"}
psycopg2-binary = "^2.9.9"
pytest-benchmark = "^4.0.0"
pytest-randomly = "^3.15.0"
pytest-repeat = "^0.9.1"
pytest-sugar = "^0.9.7"
pytest-clarity = "^1.0.1"
bandit = "^1.7.7"
safety = "^2.3.5"
pytest-parallel = "^0.1.1"
pytest-reportlog = "^0.3.0"
pytest-html = "^4.1.1"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    -n auto
    --dist=loadfile
    --maxprocesses=8
    --durations=10
    --verbosity=2
    --showlocals
    --tb=short
    --strict-markers
    --asyncio-mode=auto
    --randomly-seed=1234
    --randomly-dont-reset-seed
    --html=test-reports/report.html
    --self-contained-html
"""
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "security: Security-related tests",
    "performance: Performance tests",
    "slow: Tests that take longer to run",
    "auth: Authentication and authorization tests",
    "mesh: Service mesh tests",
    "cache: Caching tests",
    "database: Database tests",
    "messaging: Messaging tests",
    "monitoring: Monitoring and metrics tests",
    "processing: Data processing tests",
    "flaky: Mark test as flaky",
    "benchmark: Benchmark tests",
    "smoke: Quick smoke tests",
    "e2e: End-to-end tests"
]
timeout = 300

[tool.coverage.run]
branch = true
source = ["datapunk_shared"]
omit = [
    "tests/*",
    "**/__init__.py",
]
parallel = true
concurrency = ["thread", "multiprocessing"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80
show_missing = true
skip_covered = true
sort = "Cover"

[tool.coverage.html]
directory = "coverage_html"
show_contexts = true

[tool.coverage.xml]
output = "coverage.xml"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api" 