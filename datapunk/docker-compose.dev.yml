# Development Environment Configuration
# Implements service mesh architecture (see: sys-arch.mmd)
# NOTE: Requires Docker Engine 20.10+ for full feature support
# TODO: Add health check implementations for all services
# TODO: Implement resource limits for production readiness
# FIXME: Add security scanning in pre-deployment

services:
  # Lake Service: Data Storage and Processing Layer
  # See: sys-arch.mmd CoreServices->LakeService
  lake:
    build:
      context: .
      dockerfile: containers/lake/Dockerfile
      target: development  # NOTE: Separate from production build
    volumes:
      # Hot-reload enabled for development
      - ./containers/lake/src:/app/src
      - ./containers/lake/tests:/app/tests
      - ./lib/shared:/usr/lib/shared  # Shared utilities
      # Persistent storage for development data
      - lake-dev-data:/data  # TODO: Implement backup strategy
      - lake-dev-cache:/cache  # NOTE: Cleared on container restart
    environment:
      - PYTHONPATH=/app/src:/usr/lib/shared
      - DEBUG=1  # TODO: Add detailed logging configuration
      - ENVIRONMENT=development
    ports:
      - "8000:8000"  # API access
      - "5678:5678"  # Remote debugger port

  # Stream Service: Real-time Data Processing
  # See: sys-arch.mmd CoreServices->StreamService
  stream:
    build:
      context: .
      dockerfile: containers/stream/Dockerfile
      target: development
    volumes:
      - ./containers/stream/src:/app/src
      - ./containers/stream/tests:/app/tests
      - ./lib/shared:/usr/lib/shared

  nexus:
    build:
      context: .
      dockerfile: containers/nexus/Dockerfile
      target: development
    volumes:
      - ./containers/nexus/src:/app/src
      - ./containers/nexus/tests:/app/tests
      - ./lib/shared:/usr/lib/shared
      - nexus-dev-cache:/cache
    environment:
      - PYTHONPATH=/app/src:/usr/lib/shared
      - DEBUG=1
      - ENVIRONMENT=development
    ports:
      - "8002:8002"
      - "5680:5680"  # For debugger

  frontend:
    build:
      context: containers/frontend
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./containers/frontend/src:/app/src
      - ./containers/frontend/static:/app/static
      - frontend-dev-cache:/app/.svelte-kit
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
      - "24678:24678"  # For HMR

volumes:
  lake-dev-data:
    driver: local
  lake-dev-cache:
    driver: local
  stream-dev-data:
    driver: local
  stream-dev-cache:
    driver: local
  nexus-dev-cache:
    driver: local
  frontend-dev-cache:
    driver: local 