FROM python:3.11-slim as python-base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        curl \
        build-essential \
        libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r datapunk && \
    useradd -r -g datapunk app && \
    mkdir -p /app && \
    chown -R app:datapunk /app

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

# Create working directory
WORKDIR $PYSETUP_PATH

# Copy shared library
COPY --chown=app:datapunk lib/shared/pyproject.toml lib/shared/poetry.lock ./

# Install dependencies
RUN poetry install --no-root --no-dev

# Development stage
FROM python-base as development
ENV FASTAPI_ENV=development

# Install development dependencies
RUN poetry install

# Production stage
FROM python-base as production
ENV FASTAPI_ENV=production

# Copy only necessary files
COPY --chown=app:datapunk lib/shared/datapunk_shared ./datapunk_shared
RUN poetry install --no-dev

WORKDIR /app