openapi: 3.1.0
info:
  title: Marvin API
  description: API for managing tasks and projects in Marvin, using token-based authentication via Full Access Token only.
  version: 1.0.0
servers:
  - url: https://hungry-eels-type.loca.lt
    description: Marvin API Server exposed through LocalTunnel
components:
  securitySchemes:
    Full_Access_Token:
      type: apiKey
      in: header
      name: X-Full-Access-Token
      description: Full Access Token for all operations.
  schemas:
    Subtask:
    type: object
    properties:
      _id:
        type: string
        description: The unique ID of the subtask.
        example: "subtask123"
      title:
        type: string
        description: The title of the subtask.
        example: "Write introduction section"
      done:
        type: boolean
        description: Whether the subtask is marked as done.
        example: false
      timeEstimate:
        type: integer
        description: The estimated time to complete the subtask, in milliseconds.
        example: 1800000
      rank:
        type: integer
        description: The subtask's sort order within the parent task.
        example: 1

    Task:
    type: object
    properties:
      _id:
        type: string
        description: The unique ID of the task.
        example: task123
      title:
        type: string
        description: The title of the task.
        example: "Complete project documentation"
      done:
        type: boolean
        description: Whether the task is marked as done.
        example: false
      parentId:
        type: string
        description: The ID of the parent project or category.
        example: project123
      labelIds:
        type: array
        items:
          type: string
        description: List of IDs for labels attached to this task.
        example: ["label1", "label2"]
      timeEstimate:
        type: integer
        description: The estimated time to complete the task, in milliseconds.
        example: 3600000
      dueDate:
        type: string
        format: date
        description: When the task is due.
        example: "2024-09-20"
      firstScheduled:
        type: string
        format: date
        description: The first date the task was scheduled for.
        example: "2024-09-18"
      priority:
        type: string
        description: Priority level of the task, such as "low", "mid", or "high".
        example: "high"
      isStarred:
        type: boolean
        description: Whether the task is starred (important).
        example: true
      note:
        type: string
        description: A note attached to the task.
        example: "Finish by 5 PM"
      rank:
        type: integer
        description: The sort rank within the parent.
        example: 999
      subtasks:
        type: array
        items:
          $ref: "#/components/schemas/Subtask"
        description: An array of subtasks associated with this task.
      day:
        type: string
        description: The scheduled day for the task, formatted as "YYYY-MM-DD".
        example: "2024-09-18"
      plannedWeek:
        type: string
        description: The week the task is planned for, formatted as "YYYY-MM-DD".
        example: "2024-09-16"
      plannedMonth:
        type: string
        description: The month the task is planned for, formatted as "YYYY-MM".
        example: "2024-09"
      rewardPoints:
        type: number
        description: Reward points for completing the task.
        example: 1.5
      backburner:
        type: boolean
        description: Whether the task is manually placed on the backburner.
        example: false
      isFrogged:
        type: integer
        description: Frog prioritization level for tasks.
        example: 2


    Project:
      type: object
      properties:
        _id:
          type: string
          description: The unique ID of the project.
          example: project123
        title:
          type: string
          description: The title of the project.
          example: "New Project"
        done:
          type: boolean
          description: Whether the project is marked as done.
          example: false
        dueDate:
          type: string
          format: date
          description: The due date of the project, formatted as "YYYY-MM-DD".
          example: "2024-09-20"
        labelIds:
          type: array
          items:
            type: string
          description: List of IDs for labels attached to this project.
          example: ["label1", "label2"]
        timeEstimate:
          type: integer
          description: Estimated time to complete the project, in milliseconds.
          example: 7200000
        parentId:
          type: string
          description: The ID of the parent category or project.
          example: category123
        plannedWeek:
          type: string
          description: The week the project is planned for, formatted as "YYYY-MM-DD".
          example: "2024-09-16"
        plannedMonth:
          type: string
          description: The month the project is planned for, formatted as "YYYY-MM".
          example: "2024-09"
        priority:
          type: string
          description: Priority level of the project, such as "low", "mid", or "high".
          example: "high"
        recurring:
          type: boolean
          description: Whether the project is recurring.
          example: true
        reviewDate:
          type: string
          description: The date when the project is set for review, formatted as "YYYY-MM-DD".
          example: "2024-10-01"
        timeBlockSection:
          type: string
          description: The ID of the time block section assigned to the project.
          example: "timeBlock123"
        rewardPoints:
          type: number
          description: Reward points available for completing the project.
          example: 2.0
        note:
          type: string
          description: A note attached to the project.
          example: "Work on this project gradually"
        rank:
          type: integer
          description: The sort rank within the parent.
          example: 999
        backburner:
          type: boolean
          description: Whether the project is manually placed on the backburner.
          example: false
        isFrogged:
          type: integer
          description: Frog prioritization level for projects.
          example: 3

paths:
  /api/addTask:
    post:
      operationId: createTask
      summary: Create a new task in Marvin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "200":
          description: Task created successfully
        "401":
          description: Unauthorized - Invalid or missing token
      security:
        - Full_Access_Token: []

  /api/doc/delete:
    post:
      operationId: deleteDocument
      summary: Delete a document from the Marvin database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: string
                  description: The ID of the document to delete.
                  example: xy12n3i123
      responses:
        "200":
          description: Document deleted successfully
        "401":
          description: Unauthorized - Invalid or missing token
        "404":
          description: Document not found
      security:
        - Full_Access_Token: []

  /api/addProject:
    post:
      operationId: createProject
      summary: Create a new project in Marvin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
      responses:
        "200":
          description: Project created successfully
        "401":
          description: Unauthorized - Invalid token
      security:
        - Full_Access_Token: []

  /api/children:
    get:
      operationId: listAllTasks
      summary: Retrieve a list of all tasks in Marvin
      parameters:
        - in: query
          name: parentId
          schema:
            type: string
          required: true
          description: The parent ID to retrieve all tasks from. Use "unassigned" for tasks without a parent.
      responses:
        "200":
          description: A list of tasks was successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized - Invalid or missing token
      security:
        - Full_Access_Token: []

security:
  - Full_Access_Token: []
