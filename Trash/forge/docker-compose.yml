x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:
  redis:
    image: redis:7-alpine
    container_name: datapunk_redis_forge
    ports:
      - "6379:6379"
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "redis-cli", "ping"]
    networks:
      - datapunk_forge_network

  datapunk-lake:
    image: datapunk/lake:latest
    container_name: datapunk_lake_forge
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-datapunk}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-datapunk}
    volumes:
      - data_volume:/var/lib/postgresql/data
      - import_staging:/data/staging
      - archive:/data/archive
      - lake_logs:/var/log/datapunk/lake
      - ../datapunk-lake/config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ../datapunk-lake/config/init-extensions.sql:/docker-entrypoint-initdb.d/init-extensions.sql:ro
    ports:
      - "5432:5432"
    networks:
      - datapunk_forge_network
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD-SHELL", "pg_isready -U datapunk -d datapunk"]
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: '8G'
        reservations:
          cpus: '2'
          memory: '4G'
    depends_on:
      redis:
        condition: service_healthy

  datapunk-forge:
    build:
      context: .
      dockerfile: Dockerfile
    image: datapunk/forge:latest
    container_name: datapunk_forge_local
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      POSTGRES_URL: ${POSTGRES_URL:-postgresql://datapunk:changeme@datapunk-lake:5432/datapunk}
      MLRUN_DBPATH: ${MLRUN_DBPATH:-postgresql://datapunk:changeme@datapunk-lake:5432/mlrun}
      MODEL_CACHE_SIZE: 2GB
      MAX_BATCH_SIZE: 32
    volumes:
      - forge_models:/models
      - forge_cache:/cache
      - forge_logs:/var/log/datapunk/forge
    ports:
      - "8002:8002"
    networks:
      - datapunk_forge_network
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: '16G'
        reservations:
          cpus: '2'
          memory: '8G'
    depends_on:
      datapunk-lake:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  data_volume:
  import_staging:
  archive:
  lake_logs:
  forge_models:
  forge_cache:
  forge_logs:

networks:
  datapunk_forge_network:
    name: datapunk_forge_network
    driver: bridge